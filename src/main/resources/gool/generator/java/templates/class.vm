## Copyright 2010 Pablo Arrighi, Alex Concha, Miguel Lezama for version 1.
## Copyright 2013 Pablo Arrighi, Miguel Lezama, Kevin Mazet for version 2.    
##
## This file is part of GOOL.
## 
## GOOL is free software: you can redistribute it and/or modify it under the terms of the GNU
## General Public License as published by the Free Software Foundation, version 3.
##
## GOOL is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
## even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
## See the GNU General Public License version 3 for more details.
## 
## You should have received a copy of the GNU General Public License along with GOOL,
## in the file COPYING.txt.  If not, see <http://www.gnu.org/licenses/>.





##---------------------
##  This is a velocity template file for printing out Java classes
##  See http://velocity.apache.org/engine/releases/velocity-1.5/user-guide.html
##  Velocity Note:
##  - Velocity instructions begin with a single #
##  - Comments with a double #
##  - The $ are references and get replaced.
##  - The rest prints out directly.                          
##---------------------
##
## Load up some velocity macros. 
## (Velocity Note: the parse command inserts another template.)
#parse($macros)
##
## Print out the platform as comment. 
## (Velocity Note: the .Platform is short for .getPlatform().)
// Platform: $class.Platform

## Print out the package when there is one
#if($class.Ppackage)package ${class.PackageName};#end

## Print out the imports
#includescond ($Helper.printDependencies($class) $Helper.printRecognizedDependencies($class))
$Helper.printRecognizedDependencies($class)

## Declare the class with the format: 
## [modifiers] interface/class [extends ...] [implements ...]
#join($class.Modifiers " ") #if($class.isInterface()) interface#else class#end $class.Name #if($class.ParentClass)extends $class.ParentClass#end#interfaces($class.Interfaces) {

## Declare its fields
#foreach( $field in $class.Fields )
## The following will call field.toString() 
## which will trigger JavaGenerator.getCode(field)
## which will generate the code for the field declaration and initialization.
    $field;
#end

## Declare its methods
#foreach( $method in $class.Methods )
	#if($method.isGoolMethodImplementation())$method#else
    ${method.Header}#if($class.isInterface());#else {
#if($method.isConstructor)
	#foreach( $parentCall in $method.ParentCalls )
		$parentCall
	#end
#end        
${method.Block}
    }#end
#end
#end
}