# Copyright 2010 Pablo Arrighi, Alex Concha, Miguel Lezama for version 1.
# Copyright 2013 Pablo Arrighi, Miguel Lezama, Kevin Mazet for version 2.    
# 
# This file is part of GOOL.
# 
# GOOL is free software: you can redistribute it and/or modify it under the terms of the GNU
# General Public License as published by the Free Software Foundation, version 3.
# 
# GOOL is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License version 3 for more details.
# 
# You should have received a copy of the GNU General Public License along with GOOL,
# in the file COPYING.txt.  If not, see <http://www.gnu.org/licenses/>.





# This part specifies how java methods of the input code are matched with GOOL library methods.
# Methods should be written as a method signature:	ClassName.methodName(type_param_1, type_param_2, ...) : return_type
# Multiple methods can be matched with the same GOOL method, but one method signature per line.

net.GoolInetAddress.getByName		<- java.net.InetAddress.getByName(String):InetAddress
net.GoolInetAddress.getHostName		<- java.net.InetAddress.getHostName:String
net.GoolInetAddress.getHostAddress	<- java.net.InetAddress.getHostAddress:String

net.GoolDatagramSocket.bind		<- java.net.DatagramSocket.bind(InetAddress):void
net.GoolDatagramSocket.connect		<- java.net.DatagramSocket.connect(InetAddress):void
net.GoolDatagramSocket.disconnect	<- java.net.DatagramSocket.disconnect():void
net.GoolDatagramSocket.send		<- java.net.DatagramSocket.send(DatagramPacket):void
net.GoolDatagramSocket.receive		<- java.net.DatagramSocket.receive(DatagramPacket):void

net.GoolDatagramPacket.getAddress	<- java.net.DatagramPacket.getAddress:InetAddress
net.GoolDatagramPacket.getData		<- java.net.DatagramPacket.getData:byte[]
net.GoolDatagramPacket.getPort		<- java.net.DatagramPacket.getPort:int	

net.GoolSocket 				<- java.net.Socket
net.GoolSocket.bind			<- java.net.Socket.bind(InetAddress):void
net.GoolSocket.connect			<- java.net.Socket.connect(InetAddress):void
net.GoolSocket.disconnect		<- java.net.Socket.disconnect():void
net.GoolSocket.getInputStream		<- java.net.Socket.getInputStream():java.io.DataInputStream
net.GoolSocket.getOutputStream		<- java.net.Socket.getOutputStream():java.io.DataOutputStream
net.GoolSocket.getInetAddress 		<- java.net.ServerSocket.getInetAddress():InetAddress
net.GoolSocket.close 			<- java.net.ServerSocket.close():void

net.GoolServerSocket.accept 		<- java.net.ServerSocket.accept():Socket getInetAddress()
net.GoolServerSocket.bind		<- java.net.ServerSocket.bind(InetAddress):void
net.GoolServerSocket.getInetAddress	<- java.net.ServerSocket.getInetAddress():InetAddress
net.GoolServerSocket.close 		<- java.net.ServerSocket.close():void
