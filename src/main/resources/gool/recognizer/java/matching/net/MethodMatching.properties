# Copyright 2010 Pablo Arrighi, Alex Concha, Miguel Lezama for version 1.
# Copyright 2013 Pablo Arrighi, Miguel Lezama, Kevin Mazet for version 2.    
# 
# This file is part of GOOL.
# 
# GOOL is free software: you can redistribute it and/or modify it under the terms of the GNU
# General Public License as published by the Free Software Foundation, version 3.
# 
# GOOL is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License version 3 for more details.
# 
# You should have received a copy of the GNU General Public License along with GOOL,
# in the file COPYING.txt.  If not, see <http://www.gnu.org/licenses/>.





# This part specifies how java methods of the input code are matched with GOOL library methods.
# Methods should be written as a method signature:	ClassName.methodName(type_param_1, type_param_2, ...) : return_type
# Multiple methods can be matched with the same GOOL method, but one method signature per line.

net.GoolInetAddress.getByName(String host):net.GoolInetAddress 		<- java.net.InetAddress.getByName(String host):java.net.InetAddress
net.GoolInetAddress.getHostName():String							<- java.net.InetAddress.getHostName():String
net.GoolInetAddress.getHostAddress():String							<- java.net.InetAddress.getHostAddress():String

void net.GoolDatagramSocket.bind(net.GoolInetAddress adds)			<- void java.net.DatagramSocket.bind(java.net.InetAddress adds)
void net.GoolDatagramSocket.connect(net.GoolInetAddress	adds)		<- void java.net.DatagramSocket.connect(java.net.InetAddress adds)
void net.GoolDatagramSocket.disconnect()							<- void java.net.DatagramSocket.disconnect()
void net.GoolDatagramSocket.send(net.GoolDatagramPacket packet)		<- void java.net.DatagramSocket.send(java.net.DatagramPacket packet)
void net.GoolDatagramSocket.receive	(net.GoolDatagramPacket packet)	<- void java.net.DatagramSocket.receive(java.net.DatagramPacket packet)

net.GoolInetAddress net.GoolDatagramPacket.getAddress()			<- java.net.InetAddress java.net.DatagramPacket.getAddress()
byte[] net.GoolDatagramPacket.getData()							<- byte[] java.net.DatagramPacket.getData()
int net.GoolDatagramPacket.getPort()							<- int java.net.DatagramPacket.getPort()

void net.GoolSocket.bind(net.GoolInetAddress adds)			<- void java.net.Socket.bind(java.net.InetAddress adds)
void net.GoolSocket.connect(net.GoolInetAddress adds)		<- void java.net.Socket.connect(java.net.InetAddress adds)
void net.GoolSocket.disconnect								<- void java.net.Socket.disconnect()
io.GoolDataInputStream net.GoolSocket.getInputStream()		<- java.io.DataInputStream java.net.Socket.getInputStream()
io.GoolDataOutputStream net.GoolSocket.getOutputStream()	<- java.io.DataOutputStream java.net.Socket.getOutputStream()
net.GoolInetAddress net.GoolSocket.getInetAddress() 		<- java.net.InetAddress java.net.ServerSocket.getInetAddress()
void net.GoolSocket.close() 								<- void java.net.ServerSocket.close()

net.GoolSocket net.GoolServerSocket.accept() 				<- java.net.Socket java.net.ServerSocket.accept() 
void net.GoolServerSocket.bind(net.GoolInetAddress adds)	<- java.net.ServerSocket.bind(java.net.InetAddress adds)
net.GoolInetAddress net.GoolServerSocket.getInetAddress()	<- java.net.InetAddress java.net.ServerSocket.getInetAddress()
void net.GoolServerSocket.close() 							<- void java.net.ServerSocket.close()